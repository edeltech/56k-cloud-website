name: Deploy to AWS

on:
  push:
    branches: [dev, main, deploy-with-open-next]

env:
  NEXT_PUBLIC_HUBSPOT_API: ${{vars.NEXT_PUBLIC_HUBSPOT_API}}
  STRAPI_API_URL: ${{vars.STRAPI_API_URL}}
  STRAPI_API_TOKEN: ${{secrets.STRAPI_API_TOKEN}}
  CDK_DEFAULT_ACCOUNT: ${{vars.CDK_DEFAULT_ACCOUNT}}
  CDK_DEFAULT_REGION: ${{vars.CDK_DEFAULT_REGION}}

jobs:
  deploy:
    name: Deploy to AWS
    runs-on: [self-hosted, '56kcloud-website-codebuild']
    environment: ${{github.ref == 'refs/heads/main' && 'prod' || 'dev'}}
    permissions:
      id-token: write
      contents: read
      deployments: write
    steps:

      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Get the branch name
        id: get_branch
        run: echo "::set-output name=branch::${GITHUB_REF#refs/heads/}"
        shell: bash

      - uses: chrnorm/deployment-action@v2
        name: Create GitHub deployment for ${{github.job.environment.name}}
        id: deployment
        with:
          token: '${{github.token}}'
          environment: ${{github.job.environment.name}}
          ref: ${{steps.get_branch.outputs.branch}}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Install dependencies
        run: |
          npm install
      
      - name: Add .env file in www
        run: |
          cd apps/www
          touch .env
          echo NEXT_PUBLIC_HUBSPOT_API=$NEXT_PUBLIC_HUBSPOT_API >> .env
          echo STRAPI_API_URL=$STRAPI_API_URL >> .env
          echo STRAPI_API_TOKEN=$STRAPI_API_TOKEN >> .env
          cat .env

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{vars.CDK_DEFAULT_ACCOUNT}}:role/56kcloud-website-role
          aws-region: ${{vars.CDK_DEFAULT_REGION}}

      - name: Deploying
        run: |
          cd infrastructure && npm i && npx cdk deploy Stack56KcloudOpenNext --require-approval never

      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@v2
        with:
          token: '${{github.token}}'
          state: 'success'
          deployment-id: ${{steps.deployment.outputs.deployment_id}}

      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@v2
        with:
          token: '${{github.token}}'
          state: 'failure'
          deployment-id: ${{steps.deployment.outputs.deployment_id}}
